on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v1

      - name: "Checkout repository on branch: ${{ github.REF }}"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.HEAD_REF }}

      - name: Retrieve entire repository history
        run: |
          git fetch --prune --unshallow
      - name: Run an analysis of the PR
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
          -Dsonar.pullrequest.base=${{ github.BASE_REF }}
          -Dsonar.pullrequest.github.repository=${{ github.repository }}
          -Dsonar.scm.provider=git
          -Dsonar.java.binaries=/tmp

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: vpanki/command-pattern-in-angular

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: push to heroku
        env:
          HEROKU_REGISTRY_URL: registry.heroku.com
          HEROKU_TOKEN: ${{ secrets.HEROKU_TOKEN }}
        run: |
          docker login --username=_ --password $HEROKU_TOKEN $HEROKU_REGISTRY_URL
          export HEROKU_API_KEY=$HEROKU_TOKEN
          heroku container:login
          heroku container:push web --app angular-command-pettern
          heroku container:release web --app angular-command-pettern
          heroku ps:scale web=1 --app angular-command-pettern
